name: GITHUB-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17'
      - name: Install backend dependencies
        run: npm install
        working-directory: ./
      - name: Build backend
        run: tsc
        working-directory: ./

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17'
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

  deploy-backend-to-aws:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Package application
        run: zip -r application.zip . -x "*.git*" -x "node_modules/*"

      - name: Upload to S3
        run: aws s3 cp application.zip s3://davon-bucket/application.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name davon-app --version-label ${{ github.sha }} --source-bundle S3Bucket=davon-bucket,S3Key=application.zip
          aws elasticbeanstalk update-environment --application-name davon-app --environment-name Davon-app-env --version-label ${{ github.sha }}

  deploy-frontend-to-s3:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Assuming your frontend build directory is frontend/build
      - name: Deploy frontend to S3/CloudFront
        run: |
          aws s3 sync ./dist/ s3://davon-bucket --delete
          aws cloudfront create-invalidation --distribution-id E3VPL28U4VRD9H --paths "/*"
